name: Build and Release State Tax Form Crawler
on:
  push:
    branches:
      - "main"
    paths:
      - "state-tax/state-tax-form-crawler/src/**"
  workflow_dispatch:
    inputs:
      chosen_env:
        type: choice
        description: Which environment to deploy?
        required: true
        default: 'dev'
        options:
          - dev
          - staging
      chosen_branch:
        type: string
        description: 'Which branch to commit changes'
        required: false

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  LAMBDA_NAME: state-tax-form-crawler
  SESSION_NAME: GithubActionAssumeRole
  WORKING_DIR: state-tax/state-tax-form-crawler/src
  ROLE_ARN: arn:aws:iam::654654273398:role/GithubAction
  AWS_REGION: us-west-2

jobs:
  set-deploy-env:
    runs-on: ubuntu-latest
    outputs:
      branch: ${{ steps.set-branch.outputs.branch }}
      account: ${{ steps.set-account.outputs.account }}
    steps:
      - name: Set AWS account id by env
        id: set-account
        run: |
            if ${{ inputs.chosen_env == 'dev' }}; then
              echo "account=654654273398" >> $GITHUB_OUTPUT
            else
              echo "stop_workflow=true" >> $GITHUB_OUTPUT
            fi
      - id: set-branch
        name: Set branch to checkout
        run: |
          echo "deployment_branch=${{ inputs.chosen_branch }}" >> $GITHUB_OUTPUT
          if ${{ inputs.chosen_env != 'dev' }}; then
            echo "branch=${{ inputs.chosen_branch }}" >> $GITHUB_OUTPUT
          else
            echo "branch=${{ github.ref_name }}" >> $GITHUB_OUTPUT
          fi
      - name: Display output variables
        run: |
          echo "Chosen environment: ${{ inputs.chosen_env }}"
          echo "Chosen branch: ${{ inputs.chosen_branch }}"
          echo "AWS Account: ${{ steps.set-account.outputs.account }}"
      - name: check stop_workflow
        run: |
          if ${{ steps.set-account.outputs.stop_workflow == 'true'}}; then
            echo "Stop workflow"
            exit 1
          fi

  build-and-upload:
    needs: set-deploy-env
    runs-on: ubuntu-latest
    ## JWT Permissions required by GH
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.set-deploy-env.outputs.branch }}
          fetch-depth: 0
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ env.ROLE_ARN }}
          role-session-name: ${{ env.SESSION_NAME }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Use Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install dependencies
        working-directory: ${{ env.WORKING_DIR }}
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt
          mkdir -p ../package
          cp -r venv/lib/python*/site-packages/* ../package/
          cp -r venv/lib64/python*/site-packages/* ../package/ 2>/dev/null || true
          deactivate
      - name: Package lambda function
        working-directory: ${{ env.WORKING_DIR }}
        run: |
          mkdir -p ../package/src
          cp -r . ../package/src/
          cd ../package
          zip -r ../function.zip .
          cd ..
          rm -rf ../package
          rm -rf package
      - name: Check AWS identity
        run: |
          aws sts get-caller-identity
      - name: Upload lambda to AWS (DEV)
        working-directory: ${{ env.WORKING_DIR }}
        env:
          FUNCTION_NAME: arn:aws:lambda:us-west-2:${{ needs.set-deploy-env.outputs.account }}:function:${{ env.LAMBDA_NAME }}
        run: |
          pwd && ls -al dev/function.zip
          aws lambda update-function-code --function-name $FUNCTION_NAME --zip-file fileb://function.zip
